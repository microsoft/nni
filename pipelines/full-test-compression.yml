resources:
  repositories:
  - repository: mmdetRepo
    type: github
    endpoint: mmdetection
    name: open-mmlab/mmdetection

trigger: none

schedules:
- cron: 0 18 * * *
  branches:
    include: [ master ]
  always: true

variables:
  filter.modified.globs: 'examples/model_compress/**,nni/algorithms/compression/**,nni/compression/**,pipelines/full-test-compression.yml,test/algo/compression/**'
  filter.prbody.heading: '#### Test Options'
  filter.prbody.optionIndex: 3

stages:
- stage: filter
  jobs:
  - job: check
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: templates/stage-filter.yml

- stage: test
  # dependencies.$(StageName).outputs['$(JobName).$(TaskName).$(VariableName)']
  condition: and(succeeded(), ne(dependencies.filter.outputs['check.execution.skipsubsequent'], 'true'))
  jobs:
  - job: linux
    pool: nni-it-1es-11
    timeoutInMinutes: 60

    steps:
    - checkout: self
      path: ./s

    - checkout: mmdetRepo
      fetchTags: true
      path: ./mmdetection

    - template: templates/check-gpu-status.yml

    - template: templates/install-dependencies.yml
      parameters:
        platform: ubuntu-latest-gpu
        python_env: venv

    - template: templates/install-nni.yml

    - template: templates/download-test-data.yml

    - script: |
        cd test/algo
        python -m pytest compression
      displayName: Compression unit test
      env:
        MMDET_DIR: $(Agent.BuildDirectory)/mmdetection
