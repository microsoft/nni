name: 'Fast Test'

jobs:
- job: 'ubuntu_latest'
  pool:
    # FIXME: In ubuntu-20.04 Python interpreter crashed during SMAC UT
    vmImage: 'ubuntu-18.04'

  steps:
  - script: |
      set -e
      python3 -m pip install -U --upgrade pip setuptools
      python3 -m pip install -U pytest coverage
      python3 -m pip install -U pylint flake8
      echo "##vso[task.setvariable variable=PATH]${HOME}/.local/bin:${PATH}"
    displayName: 'Install python tools'

  - script: |
      python3 setup.py develop
    displayName: 'Install NNI'

  # run this one first because it's fast
  - script: |
      set -e
      cd ts/nni_manager
      yarn eslint
      cd ../webui
      yarn eslint
    displayName: 'ESLint'

  - script: |
      set -e
      sudo apt-get install -y pandoc
      python3 -m pip install -U --upgrade pygments
      python3 -m pip install -U torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
      python3 -m pip install -U tensorflow==2.3.1
      python3 -m pip install -U keras==2.4.2
      python3 -m pip install -U gym onnx peewee thop
      python3 -m pip install -U sphinx==1.8.3 sphinx-argparse==0.2.5 sphinx-markdown-tables==0.0.9 sphinx-rtd-theme==0.4.2 sphinxcontrib-websupport==1.1.0 recommonmark==0.5.0 nbsphinx
      sudo apt-get install swig -y
      nnictl package install --name=SMAC
      nnictl package install --name=BOHB
    displayName: 'Install extra dependencies'

  - script: |
      cd docs/en_US
      sphinx-build -M html . _build -W --keep-going -T
    displayName: 'Check Sphinx documentation'

  - script: |
      set -e
      python3 -m pylint --rcfile pylintrc nni
      python3 -m flake8 nni --count --select=E9,F63,F72,F82 --show-source --statistics
      EXCLUDES=examples/trials/mnist-nas/*/mnist*.py,examples/trials/nas_cifar10/src/cifar10/general_child.py
      python3 -m flake8 examples --count --exclude=$EXCLUDES --select=E9,F63,F72,F82 --show-source --statistics
    displayName: 'pylint and flake8'

  - script: |
      cd test
      python3 -m pytest ut
    displayName: 'Python unit test'

  - script: |
      set -e
      cd ts/nni_manager
      yarn test
      cd ../nasui
      CI=true yarn test
    displayName: 'TypeScript unit test'

  - script: |
      cd test
      python3 nni_test/nnitest/run_tests.py --config config/pr_tests.yml
    displayName: 'Simple integration test'


- job: 'ubuntu_legacy'
  pool:
    vmImage: 'ubuntu-18.04'

  steps:
  - script: |
      set -e
      python3 -m pip install -U --upgrade pip setuptools
      python3 -m pip install -U pylint astroid
      python3 -m pip install -U pytest coverage
      echo "##vso[task.setvariable variable=PATH]${HOME}/.local/bin:${PATH}"
    displayName: 'Install python tools'

  - script: |
      python3 setup.py develop
    displayName: 'Install NNI'

  - script: |
      set -e
      python3 -m pip install -U torch==1.3.1+cpu torchvision==0.4.2+cpu -f https://download.pytorch.org/whl/torch_stable.html
      python3 -m pip install -U tensorflow==1.15.2
      python3 -m pip install -U keras==2.1.6
      python3 -m pip install -U gym onnx peewee
      sudo apt-get install swig -y
      nnictl package install --name=SMAC
      nnictl package install --name=BOHB
    displayName: 'Install extra dependencies'

  - script: |
      cd test
      python3 -m pytest ut
    displayName: 'Python unit test'

  - script: |
      set -e
      cd ts/nni_manager
      yarn test
      cd ../nasui
      CI=true yarn test
    displayName: 'TypeScript unit test'

  - script: |
      cd test
      python3 nni_test/nnitest/run_tests.py --config config/pr_tests.yml
    displayName: 'Simple integration test'


# TODO: macOS

# TODO: Windows
