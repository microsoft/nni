# Test 1 y =  0.7603016408905308
# Actual y =  0.9632
curvefitting([0.8018166665981213, 0.9276166671514511, 0.94371666431427, 0.9530999948581059], 0.95)
  
# Test 2 y =  1.2355275157435859
# Actual y =  0.9957
curvefitting([0.9412833386659623, 0.9856666787465413, 0.9902166752020518, 0.9932500064373017], 0.95)
   
# Test 3 y =  1.2355275157435859
# Actual y =  0.9935
curvefitting([0.9398166693250338, 0.9840166797240575, 0.9894000099102656, 0.9919666741291682], 0.95)
   
# Test 4 y =  0.5189530639410691
# Actual y =  0.9983
curvefitting([0.0991, 0.3717, 0.5475, 0.6665, 0.7615], 0.95)
 
# Test 5 y =  0.2710991912961025
# Actual y =  0.1135
curvefitting([0.0976, 0.1032, 0.1135, 0.101, 0.1135], 0.95)
   
# Test 6 y =  0.44030084980369366
# Actual y =  0.0980
curvefitting([0.0892, 0.0958, 0.1028, 0.0892, 0.1135, 0.1010], 0.95)
   
# Test 7 y =  0.4403016408905307
# Actual y =  0.07375
curvefitting([0.0958, 0.1032, 0.1032, 0.1032, 0.0974, 0.1009], 0.95)
  
# Test 8 y =  0.6708587832073503
# Actual y =  0.961800
curvefitting([0.1187, 0.9039, 0.9278, 0.9422, 0.9488, 0.9554], 0.95)
    
# Test 9 y =  0.5603008498036938
# Actual y =  0.9396
curvefitting([0.0530, 0.6593, 0.7481, 0.8081, 0.8511, 0.8656], 0.95)
   
# Test 10 y =  0.11109919129610249
# Actual y  =  0.0982
curvefitting([0.0982, 0.1032, 0.0974, 0.0892, 0.1028, 0.1028], 0.95)

Output:
id =  1  Predict y =  0.7603016408905308
id =  2  Predict y =  1.2355275157435859
id =  3  Predict y =  1.2355275157435859
id =  4  Predict y =  0.5189530639410691
id =  5  Predict y =  0.2710991912961025
id =  6  Predict y =  0.44030084980369366
id =  7  Predict y =  0.4403016408905307
id =  8  Predict y =  0.6708587832073503
id =  9  Predict y =  0.5603008498036938
id =  10  Predict y =  0.11109919129610249

Add k Output:                             rank   Expect                           rank       result
id =  1  Predict y =  0.5249103542128244   7      Good      Actual y = 0.9632      4           Good
id =  2  Predict y =  0.8049103542128243   1      Good      Actual y = 0.9957      2           Good
id =  3  Predict y =  0.8049103542128243   2      Good      Actual y = 0.9935      3           Good
id =  4  Predict y =  0.524910331558036    6      Bad       Actual y = 0.9983      1           Good
id =  5  Predict y =  0.5249103542128243   5      Bad       Actual y = 0.1135      7           Bad
id =  6  Predict y =  0.28327435397833717  9      Bad       Actual y = 0.0980      9           Bad
id =  7  Predict y =  0.4449103542128244   8      Bad       Actual y = 0.07375     10          Bad
id =  8  Predict y =  0.7649103542128244   3      Good/Bad  Actual y = 0.961800    5           Good/Bad
id =  9  Predict y =  0.7192213115559152   4      Good/Bad  Actual y = 0.9396      6           Good/Bad
id =  10  Predict y =  0.12327435397833716 10     Bad       Actual y = 0.0982      8           Bad

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''
Test 1 Mnist
'''
#Trial 1
Learning Curve:
[0.098, 0.098, 0.1032, 0.1028, 0.098, 0.1028, 0.1028, 0.0982, 0.0982, 0.098, 0.1135, 0.101, 0.0974, 0.1009, 0.1135, 0.1028, 0.0958, 0.0974, 0.0974, 0.0974, 0.1135]
Actual y: 0.1135

#Trial 2
Learning Curve:
[0.098, 0.1032, 0.0958, 0.0974, 0.1032, 0.1135, 0.1135, 0.0892, 0.1010, 0.1135, 0.1135, 0.1009, 0.098, 0.1032, 0.1010, 0.0974, 0.0958, 0.0958, 0.1009, 0.1135, 0.1135]
Actual y: 0.1135

#Trial 3
Learning Curve:
[0.0861, 0.1133, 0.3214, 0.4142, 0.5443, 0.5928, 0.6740, 0.6930, 0.7219, 0.7725, 0.7744, 0.8235, 0.8018, 0.8244, 0.8345, 0.8315, 0.8102, 0.8269, 0.8062, 0.8713, 0.8478]
Actual y: 0.8478

#Trial 4
Learning Curve:
[0.1132, 0.1047, 0.1385, 0.3019, 0.2076, 0.1476, 0.1441, 0.2734, 0.3640, 0.1022, 0.1011, 0.1011, 0.1009, 0.1011, 0.0897, 0.1014, 0.0977, 0.1012, 0.0977, 0.0977, 0.0977]
Actual y: 0.0977

#Trial 5
Learning Curve:
[0.0584, 0.1698, 0.3876, 0.5201, 0.5514, 0.5971, 0.7277, 0.6276, 0.7379, 0.7799, 0.7892, 0.8293, 0.8549, 0.8512, 0.8482, 0.8142, 0.8338, 0.8606, 0.8640, 0.8816, 0.8711]
Actual y: 0.8711

#Trial 6
Learning Curve:
[0.0875, 0.7097, 0.8538, 0.888, 0.9169, 0.9112, 0.9296, 0.9407, 0.9438, 0.9455, 0.9531, 0.9541, 0.9515, 0.9521, 0.9605, 0.9574, 0.9619, 0.9568, 0.9582, 0.9669, 0.9666]
Actual y: 0.9666

#Trial 7
Learning Curve:
[0.1135, 0.7488, 0.8871, 0.915, 0.9254, 0.9408, 0.9474, 0.9479, 0.9539, 0.9608, 0.9601, 0.9631, 0.9644, 0.968, 0.9648, 0.9682, 0.9703, 0.9712, 0.9721, 0.9733, 0.9704]
Actual y: 0.9704

#Trial 8
Learning Curve:
[0.0805, 0.7016, 0.8051, 0.8647, 0.883, 0.8915, 0.907, 0.9085, 0.9193, 0.9279, 0.933, 0.933, 0.9361, 0.9308, 0.9392, 0.9422, 0.9464, 0.9489, 0.9481, 0.9505, 0.9553]
Actual y: 0.9553

#Trial 9
Learning Curve:
[0.1003, 0.3349, 0.6671, 0.7688, 0.7924, 0.8670, 0.87, 0.8982, 0.9130, 0.9178, 0.924, 0.9339, 0.9415, 0.9316, 0.9427, 0.941, 0.9475, 0.951, 0.9484, 0.9465, 0.9513]
Actual y: 0.9513

#Trial 10
Learning Curve:
[0.1135, 0.1135, 0.1032, 0.1028, 0.1032, 0.1135, 0.0982, 0.0982, 0.1135, 0.1135, 0.0958, 0.0892, 0.1032, 0.0958, 0.0958, 0.0974, 0.1032, 0.101, 0.1135, 0.1135, 0.1028]
Actual y: 0.1028

# 只采用'logx_linear'进行拟合，STEP_SIZE = 0.1 TARGET_POS = 20 RANGE = 1  预测结果与实际一摸一样
id =  1  Predict y =  0.07984922574848283    Good      Actual y: 0.1135   Good
id =  2  Predict y =  0.07984922574848283    Good      Actual y: 0.1135   Good
id =  3  Predict y =  0.8932059570655096     Good      Actual y: 0.8478   Good
id =  4  Predict y =  0.2843014695208252     Bad       Actual y: 0.0977   Bad
id =  5  Predict y =  1.097658200837852      Good      Actual y: 0.8711   Good
id =  6  Predict y =  1.7021104446101938     Good      Actual y: 0.9666   Good
id =  7  Predict y =  1.7021104446101938     Good      Actual y: 0.9704   Good
id =  8  Predict y =  1.6021104446101937     Bad       Actual y: 0.9553   Bad
id =  9  Predict y =  1.5021104446101936     Bad       Actual y: 0.9513   Bad
id =  10 Predict y =  0.07984922574848283    Bad       Actual y: 0.1028   Bad

-------------------------------------------------------------------------------------------------------
# 采用curve_fit以及12条曲线进行拟合，每个点表现最好的曲线给1/NUM的权重
curve_combination_models = ['vap', 'pow3','linear', 'logx_linear', 'dr_hill_zero_background', 'log_power', 'pow4', 'mmf', 'exp4', 'ilog2', 'weibull', 'janoschek']
id = 1 predict_y =  0.10024494602157073
id = 2 predict_y =  0.10024494602157073
id = 3 predict_y =  0.4098596722332598
id = 4 predict_y =  0.24972366112663724
id = 5 predict_y =  0.7250023842360875
id = 6 predict_y =  0.8284807850551068
id = 7 predict_y =  0.8473815361211596
id = 8 predict_y =  0.8284807850551068
id = 9 predict_y =  0.8176207964188611
id = 10 predict_y =  0.1380464481536764

------------------------------------------------------------------------------------------------------
# 采用curve_fit以及12条曲线进行拟合，取方差最小的那条线
curve_combination_models = ['vap', 'pow3','linear', 'logx_linear', 'dr_hill_zero_background', 'log_power', 'pow4', 'mmf', 'exp4', 'ilog2', 'weibull', 'janoschek']
id = 1 predict_y =  0.10024494602157075
id = 2 predict_y =  0.10024494602157075
id = 3 predict_y =  1.1976582008378525
id = 4 predict_y =  0.391333918785257
id = 5 predict_y =  1.1976582008378525
id = 6 predict_y =  1.1976582008378525
id = 7 predict_y =  1.1976582008378525
id = 8 predict_y =  1.1976582008378525
id = 9 predict_y =  1.1976582008378525
id = 10 predict_y =  0.10024494602157075

---------------------------------------------------------------------------------------------------------
id = 1 predict_y =  0.10370771955745339
id = 2 predict_y =  0.11274779619013926
id = 3 predict_y =  0.6080367777711855
id = 4 predict_y =  0.21687156117383183
id = 5 predict_y =  0.6029368554137102
id = 6 predict_y =  0.9202581325886801
id = 7 predict_y =  0.9390402213402416
id = 8 predict_y =  0.9136697121798486
id = 9 predict_y =  0.8664030074612421
